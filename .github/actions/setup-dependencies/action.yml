inputs:
  python-version:
    description: 'Python version to setup'
    required: false
    default: 3.8
runs:
  using: "composite"
  steps:
    - name: Install 3rd party from apt
      run: sudo apt install gcc g++ unar zlib1g-dev liblzo2-dev liblz4-dev liblzma-dev libzstd-dev lzop lziprecover img2simg
      shell: bash

    - name: Install 7zip
      run: |
        sudo apt remove -y p7zip
        curl -s https://www.7-zip.org/a/7z2107-linux-x64.tar.xz --output - | tar Jxvf - 7zzs
        sudo mv 7zzs /usr/local/bin/7z
        sudo chmod +x /usr/local/bin/7z
      shell: bash

    - name: Install unsquashfs
      run: |
        git clone https://github.com/IoT-Inspector/sasquatch.git /tmp/sasquatch
        cd /tmp/sasquatch/squashfs-tools
        make
        sudo make install
      shell: bash

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}

    - name: Restore pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{ inputs.python-version }}

    - name: Pip install
      run: python -m pip install --upgrade pip poetry
      shell: bash

    - name: Restore poetry cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pypoetry/cache
          ~/.cache/pypoetry/artifacts
        key: poetry-cache-and-artifacts-${{ inputs.python-version }}

    - name: Restore virtualenvs
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: venv-${{ hashFiles('poetry.lock') }}-${{ inputs.python-version }}

    - name: Poetry install
      run: UNBLOB_BUILD_RUST_EXTENSION=1 poetry install
      shell: bash
