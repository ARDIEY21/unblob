[tool.poetry]
name = "unblob"
version = "0.1.0"
description = "Extract files from any kind of container formats"
authors = ["IoT Inspector <support@iot-inspector.com>"]
license = "MIT"
packages = [
    { include = "unblob" },
]
include = ["rust/*", "rust/src/*"]
build = "build.py"

[tool.poetry.dependencies]
python = "^3.8"
yara-python = "^4.1.0"
click = "^8.0.1"
"dissect.cstruct" = "^2.0"
attrs = "^21.2.0"
structlog = "^21.2.0"
arpy = "^2.2.0"
rarfile = "^4.0"
ubi-reader = "^0.7.0"
python-lzo = "^1.12"
cstruct = "2.1"
jefferson = { git = "https://github.com/IoT-Inspector/jefferson.git", rev = "216eee6c56d338e5a14a0af5d07f1117cff92b3b" }
yaffshiv = { git = "https://github.com/IoT-Inspector/yaffshiv.git", rev = "24e6e453a36a02144ae2d159eb3229f9c6312828" }
plotext = "^4.1.5"

[tool.poetry.dev-dependencies]
lark = "^1.0.0"
pytest = "^6.2.4"
pyright = "^0.0.12"
pre-commit = "^2.15.0"
pytest-cov = "^3.0.0"
setuptools-rust = "^1.1.2"

[tool.isort]
profile = "black"

[tool.poetry.scripts]
unblob = "unblob.cli:main"
unromfs = "unblob.extractors.unromfs:cli"
extractchk = "unblob.extractors.extractchk:cli"
extracttrx = "unblob.extractors.extracttrx:cli"

[tool.pytest.ini_options]
addopts = "--cov=unblob --cov=tests --cov-branch --cov-fail-under=90"

[tool.vulture]
paths = ["unblob/"]
exclude = ["unblob/_py/"]
ignore_names = ["breakpointhook"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
